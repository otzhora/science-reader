version: "3.7"

services:
  postgres:
    container_name: postgres
    restart: always
    image: postgres:10
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - flask-app-db:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  migrations:
    container_name: migrations
    environment:
      FLASK_ENV: ${FLASK_ENV}
      FLASK_CONFIG: ${FLASK_CONFIG}
      APPLICATION_DB: ${APPLICATION_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOSTNAME: "postgres"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: 5432
    build:
      context: ${PWD}
      dockerfile: docker/Dockerfile
    command: sh -c "alembic upgrade head"
    volumes:
      - ${PWD}:/api
    depends_on:
      - postgres

  api:
    container_name: gradapi
    restart: always
    environment:
      FLASK_ENV: ${FLASK_ENV}
      FLASK_CONFIG: ${FLASK_CONFIG}
      APPLICATION_DB: ${APPLICATION_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOSTNAME: "postgres"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: 5432
    build:
      context: ${PWD}
      dockerfile: docker/Dockerfile
    command: sh -c "flask run --host=0.0.0.0"
    ports:
      - 5000:5000
    volumes:
      - ${PWD}:/api
    depends_on:
      - postgres
      - migrations

volumes:
  flask-app-db:
    name: flask-app-db
